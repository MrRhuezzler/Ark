<html>

<head>

<meta http-equiv="Content-Language" content="en-us">
<meta name="GENERATOR" content="Microsoft FrontPage 5.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<title>Iterative Deepening</title>
<link rel="stylesheet" type="text/css" href="../../styles.css">
<meta name="Microsoft Theme" content="zero-plus-one 110, default">
<meta name="Microsoft Border" content="tlb, default">
</head>

<body bgcolor="#000000" text="#FFFFFF" link="#FFCC00" vlink="#CCCC7F" alink="#FF3300"><!--msnavigation--><table border="0" cellpadding="0" cellspacing="0" width="100%"><tr><td><!--mstheme--><font face="Arial, Arial, Helvetica">

<p align="left">
<script language="JavaScript"><!--
MSFPhover = 
  (((navigator.appName == "Netscape") && 
  (parseInt(navigator.appVersion) >= 3 )) || 
  ((navigator.appName == "Microsoft Internet Explorer") && 
  (parseInt(navigator.appVersion) >= 4 ))); 
function MSFPpreload(img) 
{
  var a=new Image(); a.src=img; return a; 
}
// --></script><script language="JavaScript"><!--
if(MSFPhover) { MSFPnav1n=MSFPpreload("../../_derived/back_cmp_zero-plus-one110_back.gif"); MSFPnav1h=MSFPpreload("../../_derived/back_cmp_zero-plus-one110_back_a.gif"); }
// --></script><a href="pv.htm" language="JavaScript" onmouseover="if(MSFPhover) document['MSFPnav1'].src=MSFPnav1h.src" onmouseout="if(MSFPhover) document['MSFPnav1'].src=MSFPnav1n.src"><img src="../../_derived/back_cmp_zero-plus-one110_back.gif" width="100" height="20" border="0" alt="Back" align="middle" name="MSFPnav1"></a> <script language="JavaScript"><!--
if(MSFPhover) { MSFPnav2n=MSFPpreload("../../_derived/up_cmp_zero-plus-one110_up.gif"); MSFPnav2h=MSFPpreload("../../_derived/up_cmp_zero-plus-one110_up_a.gif"); }
// --></script><a href="index.htm" language="JavaScript" onmouseover="if(MSFPhover) document['MSFPnav2'].src=MSFPnav2h.src" onmouseout="if(MSFPhover) document['MSFPnav2'].src=MSFPnav2n.src"><img src="../../_derived/up_cmp_zero-plus-one110_up.gif" width="100" height="20" border="0" alt="Up" align="middle" name="MSFPnav2"></a> <script language="JavaScript"><!--
if(MSFPhover) { MSFPnav3n=MSFPpreload("../../_derived/next_cmp_zero-plus-one110_next.gif"); MSFPnav3h=MSFPpreload("../../_derived/next_cmp_zero-plus-one110_next_a.gif"); }
// --></script><a href="aspiration.htm" language="JavaScript" onmouseover="if(MSFPhover) document['MSFPnav3'].src=MSFPnav3h.src" onmouseout="if(MSFPhover) document['MSFPnav3'].src=MSFPnav3n.src"><img src="../../_derived/next_cmp_zero-plus-one110_next.gif" width="100" height="20" border="0" alt="Next" align="middle" name="MSFPnav3"></a></p>

<p align="left"><font size="6"><strong>
<img src="_derived/iterative.htm_cmp_zero-plus-one110_bnr.gif" width="575" height="60" border="0" alt="Iterative Deepening"></strong></font></p>

<!--mstheme--></font></td></tr><!--msnavigation--></table><!--msnavigation--><table border="0" cellpadding="0" cellspacing="0" width="100%"><tr><td valign="top" width="1%"><!--mstheme--><font face="Arial, Arial, Helvetica">

<p>

</p>

<!--mstheme--></font></td><td valign="top" width="24"></td><!--msnavigation--><td valign="top"><!--mstheme--><font face="Arial, Arial, Helvetica">

<h1>A idea that is even better than it sounds</h1>
<p>If you are about to start searching a chess position, how deep should you 
search it?&nbsp; It is difficult to predict in advance how long a search will 
take, since the time it takes to complete a search of depth D is dependent upon 
factors that&nbsp; might not be obvious.&nbsp; In a complex middlegame position, 
you might search not very deeply at all, while in an ending you might search 
significantly deeper, and in some king+pawn endings you might be able to search 
a hundred plies.</p>
<p>An idea is to search to depth one.&nbsp; If this search completes in less 
than the amount of time allocated, search again to depth two.&nbsp; And then to 
depth three.&nbsp; And so on, until you run out of time.</p>
<p>This all but guarantees pretty good time usage.&nbsp; If you are able to 
perform a deep search quickly, you'll continue along and search even deeper the 
next time, and perhaps you'll finish that.&nbsp; If the position is more 
complicated than you expected, you won't finish many plies of search, but you 
will have at least <i>some</i> legal move to play, since it's almost impossible 
to not finish a 1-ply search.</p>
<p>This idea is called <i>iterative deepening</i>, because what happens is you 
iterate the search, going one ply deeper each time (there is nothing magic about 
going one ply deeper, for instance you could try two, but one works very well).</p>
<p>Here is the code:</p>
<p style="margin-left: 72; margin-top: 0; margin-bottom: 0" class="c-code">for (depth = 1;; 
depth++) {</p>
<p style="margin-left: 72; margin-top: 0; margin-bottom: 0" class="c-code">&nbsp;&nbsp;&nbsp; 
val = AlphaBeta(depth, -INFINITY, INFINITY);</p>
<p style="margin-left: 72; margin-top: 0; margin-bottom: 0" class="c-code">&nbsp;&nbsp;&nbsp; 
if (TimedOut())</p>
<p style="margin-left: 72; margin-top: 0; margin-bottom: 0" class="c-code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
break;</p>
<p style="margin-left: 72; margin-top: 0; margin-bottom: 0" class="c-code">}</p>
<p>It might surprise you that this is actually an extremely efficient way to 
search.&nbsp; If you enhance alpha-beta so that it returns a
<a href="pv.htm">principal variation</a>, you can feed this principle 
variation back into the next iteration of search.</p>
<p>For instance, if a one-ply search indicates that 1. e4 is the best move, you 
will search 1. e4 first when you perform a two-ply search.&nbsp; If that returns 
the line 1. e4 e5, you will search that line first when you perform a three-ply 
search.</p>
<p>The effect of this is that the first line you search tends to be good.&nbsp; 
Alpha-beta is extremely sensitive to move ordering.&nbsp; If your move ordering 
is bad, in chess your <a href="alphabeta.htm#branching factor">
branching factor </a>will be about 35.&nbsp; If your move ordering is good, the 
branching factor will be closer to 6.&nbsp; The principal variation from the 
previous iteration of the search function tends to be very good.</p>
<p>Iterative deepening provides you with a simple means of interrupting the 
search when you run out of time, <i>and</i> it makes your search more efficient.</p>

<!--mstheme--></font><!--msnavigation--></td></tr><!--msnavigation--></table><!--msnavigation--><table border="0" cellpadding="0" cellspacing="0" width="100%"><tr><td><!--mstheme--><font face="Arial, Arial, Helvetica">



<h5><!--mstheme--><font color="#FF9900">&nbsp;<!--mstheme--></font></h5>



<h5><!--mstheme--><font color="#FF9900">Send mail to <a href="mailto:brucemo@seanet.com">
brucemo@seanet.com</a> with
questions or comments about this web site.<br>


Copyright © 2001 Bruce Moreland<br>


Last modified: 
11/04/02 <!--mstheme--></font></h5>

<!--mstheme--></font></td></tr><!--msnavigation--></table></body>


<!-- SOME LINK HREF'S ON THIS PAGE HAVE BEEN REWRITTEN BY THE WAYBACK MACHINE
OF THE INTERNET ARCHIVE IN ORDER TO PRESERVE THE TEMPORAL INTEGRITY OF THE SESSION. -->




</html>